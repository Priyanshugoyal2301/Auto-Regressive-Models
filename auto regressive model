import numpy as np
import matplotlib.pyplot as plt
from sklearn.metrics import mean_squared_error
np.random.seed(182)

days=np.arange(1,101)
temp=25+0.5*np.sin(0.1*days)+np.random.normal(0,0.5,size=100)

plt.plot(days,temp)
plt.show()

p = 3 # how much past you are looking into

X = []
y = []

for i in range(len(temperature) - p):
  X.append(temperature[i:i+p])
  y.append(temperature[i+p])

X = np.array(X)
y = np.array(y)

print(X.shape)
print(y.shape)
X_train = X[:80]
X_test = X[80:]
y_train = y[:80]
y_test = y[80:]
X_train_with_bias = np.c_[np.ones(X_train.shape[0]),X_train]
X_test_with_bias = np.c_[np.ones(X_test.shape[0]),X_test]

coeff = np.linalg.lstsq(X_train_with_bias,y_train,rcond=None)[0]
print(coeff)
y_pred = X_test_with_bias @ coeff
mse = mean_squared_error(y_test,y_pred)
print(mse)
plt.figure(figsize = (10,6))

plt.plot(range(len(y_test)),y_test,label = "Actual",marker = 'o')
plt.plot(range(len(y_pred)),y_pred,label = "Predicted",marker = '+')

plt.xlabel("Days")
plt.ylabel("Temperature")
plt.title("Temperature Prediction")
plt.legend()
plt.show()
